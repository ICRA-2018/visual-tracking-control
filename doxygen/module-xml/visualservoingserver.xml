<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>

<module>
    <name>visualservoingserver</name>
    <doxygen-group>icub-module</doxygen-group>
    <description>iCub device (plugin, server) for visual servoing.</description>
    <copypolicy>BSD 3-clause "New" or "Revised" License</copypolicy>
    <version> 0.6.0.0</version>

    <description-long>
    An image-based visual servoing controller for iCub.

    This is the device (YARP plugin) that controls and command iCub.
    </description-long>

    <arguments>
        <param default="false" desc="enable device verbose output log."> verbosity </param>
        <param default="" desc="mandatory, specify the robot name (e.g., iCub)"> robot </param>
        <param default="false" desc="enable a dry-run controller where the control low is simulated and the robot does not move."> simulate </param>
    </arguments>

    <authors>
        <author email="claudio.fantacci@gmail.com"> Claudio Fantacci </author>
    </authors>

    <data>
        <input>
            <type>Image</type>
            <port carrier="mcast">/visualservoing/cam_left/img:i</port>
            <description>Input image from the left camera.</description>
        </input>
        <input>
            <type>Image</type>
            <port carrier="mcast">/visualservoing/cam_right/img:i</port>
            <description>Input image from the right camera.</description>
        </input>
        <output>
            <type>Image</type>
            <port carrier="tcp">/visualservoing/cam_left/img:o</port>
            <description>Output image showing the status of the visual servo controller from the left camera viewpoint.</description>
        </output>
        <output>
            <type>Image</type>
            <port carrier="tcp">/visualservoing/cam_right/img:o</port>
            <description>Output image showing the status of the visual servo controller from the right camera viewpoint.</description>
        </output>
    </data>

    <services>
        <server>
            <type>VisualServoingIDL</type>
            <idl>VisualServoingIDL.thrift</idl>
            <port>/visualservoing/cmd:i</port>
            <description>Command port to control the visual servoing server</description>
        </server>
    </services>
</module>
